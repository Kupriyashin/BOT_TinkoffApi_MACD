import math
import random
import time

import pandas
import vk_api
from tinkoff.invest.utils import now

from datetime import timedelta

from tinkoff.invest import (
    CandleInstrument,
    Client,
    SubscribeCandlesRequest,
)

# –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
dr_pozdr = 0
long = 0
sell = 0
cena_pokupki = 0
pribil = 0

token_tinkoff_api = ''
with open('tokens.tink.txt', 'r', encoding='UTF-8') as tok_tin:
    for lin in tok_tin:
        token_tinkoff_api = lin
        break

marina_vk_token = ''
with open('token.marina.txt', 'r', encoding='UTF-8') as marvktok:
    for lin in marvktok:
        marina_vk_token = lin
        break
session_marina = vk_api.VkApi(token=marina_vk_token)

kupriyashin_token = ''
with open('token_kupriyashin.txt', 'r', encoding='UTF-8') as kupriyashin_tok:
    for lin in kupriyashin_tok:
        kupriyashin_token = lin
        break
session_kupr = vk_api.VkApi(token=kupriyashin_token)

#
# def users_holly_day():
#     try:
#         count = session_kupr.method('friends.get', {  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#         })['count']
#
#         # print
#         item = []
#         import tqdm
#         for elem in tqdm.tqdm(range(math.ceil(int(count) / 100))):
#             item = session_kupr.method('friends.get', {
#                 'offset': elem * 100,
#                 'count': 100,
#             })['items']
#             print(item, '\n')
#             print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {count}")
#
#             for i in tqdm.tqdm(range(len(item))):
#                 if 'bdate' in item[i]:
#                     import datetime
#                     if ((int(item[i]['bdate'].split('.')[0])) == datetime.datetime.now().day) and (
#                             (int(item[i]['bdate'].split('.')[1])) == datetime.datetime.now().month):
#                         print(f"\n–°–µ–≥–æ–¥–Ω—è –¥—Ä —É {item[i]['id']}")
#                         session_kupr.method('messages.send', {
#                             'user_id': str(item[i]['id']),
#                             'random_id': random.randint(-2147483648, 2147483647),
#                             'peer_id': str(item[i]['id']),
#                             'message': str("–î–æ–±—Ä–µ–π—à–µ–≥–æ –≤–µ—á–µ—Ä–∞!\n"
#                                            "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –∂–µ–ª–∞—é –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æüåö")
#                         })
#                         time.sleep(0.1)
#
#         time.sleep(0.1)
#         del item
#         print('–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω')
#     except Exception as error:
#         print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è', error)
#

def request_eterator():
    global dr_pozdr

    from tinkoff.invest.grpc.marketdata_pb2 import SUBSCRIPTION_ACTION_SUBSCRIBE
    from tinkoff.invest.grpc.marketdata_pb2 import SUBSCRIPTION_INTERVAL_FIVE_MINUTES
    from tinkoff.invest import MarketDataRequest

    yield MarketDataRequest(
        subscribe_candles_request=SubscribeCandlesRequest(
            waiting_close=True,
            subscription_action=SUBSCRIPTION_ACTION_SUBSCRIBE,
            instruments=[
                CandleInstrument(
                    figi='BBG004S68507',  # –ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫–∏–π –º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–±–∏–Ω–∞—Ç
                    interval=SUBSCRIPTION_INTERVAL_FIVE_MINUTES
                )
            ],
        )
    )
    while True:
        time.sleep(1)

        if (now() + timedelta(hours=3)).time().hour == 12 and dr_pozdr:
            dr_pozdr = 0
        elif (now() + timedelta(hours=3)).time().hour == 0 and not dr_pozdr:
            dr_pozdr = 1
            users_holly_day()

        print(f'-----{(now() + timedelta(hours=3)).time()}-----\n')


# figis = (
#     'BBG004S68BH6',#–ü–ò–ö
#     'BBG000NL6ZD9',#–ò—Ä–∫—É—Ç—Å–∫—ç–Ω–µ—Ä–≥–æ
#     'BBG00475KHX6',#—Ç—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å
#     'BBG0047315D0'#—Å—É—Ä–≥—É—Ç –Ω–µ—Ñ—Ç–µ–≥–∞–∑ 25—Ä,
#     'BBG000NLC9Z6',#–õ–µ–Ω—ç–Ω–µ—Ä–≥–æ,
#     'BBG004S68507'#–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫–∏–π –º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–±–∏–Ω–∞—Ç
# )



def main():
    try:
        with Client(token_tinkoff_api) as client:

            from tinkoff.invest import MarketDataServerSideStreamRequest
            from tinkoff.invest.grpc.instruments_pb2 import INSTRUMENT_ID_TYPE_FIGI

            for data in client.market_data_stream.market_data_stream(
                    request_eterator()
            ):
                try:
                    if data.candle:
                        # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –±—É–º–∞–≥–µ
                        instr = client.instruments.get_instrument_by(
                            id_type=INSTRUMENT_ID_TYPE_FIGI,
                            id=data.candle.figi
                        )
                        print('\n-----–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—É–º–∞–≥–µ------')
                        print(f'–õ–æ—Ç: {instr.instrument.lot}')
                        print(f'–ö–ª–∞—Å –∫–æ–¥: {instr.instrument.class_code}')
                        print(f'–ò–º—è: {instr.instrument.name}')
                        print(f'–î–æ—Å—Ç—É–ø –≤ —à–æ—Ä—Ç: {instr.instrument.short_enabled_flag}')
                        print(f'–¶–µ–Ω—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–≤–µ—á–∏: {data.candle.close}')
                        print(f'–í—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–≤–µ—á–∏: {data.candle.last_trade_ts.utcnow()}')

                        # –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ 5-—ã—Ö —Å–≤–µ—á–µ–∫ –∑–∞ 22 —á–∞—Å–∞
                        from tinkoff.invest.grpc.marketdata_pb2 import CANDLE_INTERVAL_5_MIN
                        candles_5_minutes = client.market_data.get_candles(
                            figi='BBG004S68507',
                            from_=now() - timedelta(hours=22, minutes=30),
                            to=now(),
                            interval=CANDLE_INTERVAL_5_MIN
                        ).candles
                        candles_5_minutes = candles_5_minutes[:-2]
                        print("\n-----–ö–û–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–≤–µ—á-----")
                        print(len(candles_5_minutes), '\n')

                        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–∫—Ä—ã—Ç–∏—è —ç—Ç–∏—Ö —Å–≤–µ—á–µ–∫
                        data_5_candles = {
                            'close': [],
                        }
                        for cand in candles_5_minutes:
                            data_5_candles['close'].append(
                                round(float(f"{int(cand.close.units)}.{int(cand.close.nano)}"), 3))

                        print("-----data['close']-----\n")
                        print(data_5_candles['close'], '\n')

                        # —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –ø–∞–Ω–¥–∞—Å–∞ –∏–∑ —Ü–µ–Ω –∑–∞–∫—Ä—ã—Ç–∏—è
                        db = pandas.Series(data_5_candles['close'])
                        db = pandas.Series.dropna(db)

                        # —Ä–∞—Å—á–µ—Ç –º–∞–∫–¥–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
                        from ta import trend
                        macd_deff = trend.macd_diff(close=db, window_fast=20, window_slow=34, window_sign=12)
                        macd_deff = pandas.Series.dropna(macd_deff)
                        macd_deff = round(float(macd_deff.iloc[-1]), 7)
                        print('-----–ó–Ω–∞—á–µ–Ω–∏–µ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã-----\n')
                        print(macd_deff, '\n')

                        ####################################################################################################
                        global sell
                        global long
                        global cena_pokupki
                        global pribil

                        if macd_deff < 0 and not sell:  ###SHORT

                            print('-----–ü–æ–∫—É–ø–∞—é –≤ –®–û–†–¢------\n')
                            sell = 1
                            long = 0

                            if not cena_pokupki:
                                cena_pokupki = float(f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")

                            pribil = (-cena_pokupki + float(
                                f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")) / cena_pokupki * 100
                            try:
                                session_marina.method('messages.send', {
                                    'random_id': random.randint(-2147483648, 2147483647),
                                    'peer_id': '2000000209',
                                    'chat_id': '209',
                                    'message': str(f"üÜòüÜòüÜòüÜòüÜòüÜòüÜòüÜò\n"
                                                   f"–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—É–º–∞–≥–µ.\n"
                                                   f" –í—Ä–µ–º—è –∏ –¥–∞—Ç–∞ - {now().utcnow() + timedelta(hours=3)}\n"
                                                   f"-----------------------------------------------\n"
                                                   f"–ò–º—è: {instr.instrument.name}\n"
                                                   f"–î–æ—Å—Ç—É–ø –≤ —à–æ—Ä—Ç: {instr.instrument.short_enabled_flag}\n"
                                                   f"–¶–µ–Ω–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏: {float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                                   f"–í—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏: {data.candle.time.utcnow() + timedelta(hours=3)}\n"
                                                   f"-----------------------------------------------\n"
                                                   f"‚ùó–ü–æ–∫—É–ø–∞—é –≤ –®–û–†–¢üìâ –∑–∞ {float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')} —Ä—É–±–ª–µ–π\n"
                                                   f"–ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ—à–ª–æ–π —Å–¥–µ–ª–∫–∏: {pribil - 0.3}%, —Ä—É–±–ª–µ–π: {-cena_pokupki + float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                                   f"MACD: {round(macd_deff, 7)}\n"
                                                   f"-----------------------------------------------\n")
                                })
                            except Exception as vk_err:
                                print('–í –±–ª–æ–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∫ (–®–û–†–¢) –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ', vk_err)

                            cena_pokupki = float(f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")

                            try:
                                with open('logs.txt','a',encoding='UTF-8') as logs:
                                    logs.write(str(
                                        f"–í—Ä–µ–º—è: {(data.candle.time.utcnow() + timedelta(hours=3))}\n"
                                        f"–ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ—à–ª–æ–π —Å–¥–µ–ª–∫–∏: "
                                        f"{pribil - 0.3}%\n"
                                        f"–í —Ä—É–±–ª—è—Ö: {cena_pokupki - float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                        f"\n"
                                    ))
                            except Exception as file_err:
                                print(f"–û—à–∏–±–∫–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤: {file_err}")

                        ####################################################################################################
                        elif macd_deff > 0 and not long:  ###LONG

                            print('-----–ü–æ–∫—É–ø–∞—é –≤ –õ–û–ù–ì------\n')
                            sell = 0
                            long = 1

                            if not cena_pokupki:
                                cena_pokupki = float(f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")
                            pribil = (cena_pokupki - float(
                                f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")) / cena_pokupki * 100

                            try:
                                session_marina.method('messages.send', {
                                    'random_id': random.randint(-2147483648, 2147483647),
                                    'peer_id': '2000000209',
                                    'chat_id': '209',
                                    'message': str(f"üÜòüÜòüÜòüÜòüÜòüÜòüÜòüÜò\n"
                                                   f"–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—É–º–∞–≥–µ.\n"
                                                   f" –í—Ä–µ–º—è –∏ –¥–∞—Ç–∞ - {now().utcnow() + timedelta(hours=3)}\n"
                                                   f"-----------------------------------------------\n"
                                                   f"–ò–º—è: {instr.instrument.name}\n"
                                                   f"–î–æ—Å—Ç—É–ø –≤ —à–æ—Ä—Ç: {instr.instrument.short_enabled_flag}\n"
                                                   f"–¶–µ–Ω–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ–∫—É–ø–∫–∏: {float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                                   f"–í—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏: {data.candle.time.utcnow() + timedelta(hours=3)}\n"
                                                   f"-----------------------------------------------\n"
                                                   f"‚ùó–ü–æ–∫—É–ø–∞—é –≤ –õ–û–ù–ìüìà –∑–∞ {float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')} —Ä—É–±–ª–µ–π\n"
                                                   f"–ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ—à–ª–æ–π —Å–¥–µ–ª–∫–∏: {pribil - 0.3}%, "
                                                   f"—Ä—É–±–ª–µ–π: {cena_pokupki - float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                                   f"MACD: {round(macd_deff, 7)}\n"
                                                   f"-----------------------------------------------\n")
                                })
                            except Exception as vk_err:
                                print('–í –±–ª–æ–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤–∫ (–õ–û–ù–ì) –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ', vk_err)

                            cena_pokupki = float(f"{int(data.candle.close.units)}.{int(data.candle.close.nano)}")

                            try:
                                with open('logs.txt','a',encoding='UTF-8') as logs:
                                    logs.write(str(
                                        f"–í—Ä–µ–º—è: {(data.candle.time.utcnow() + timedelta(hours=3))}\n"
                                        f"–ü—Ä–∏–±—ã–ª—å –æ—Ç –ø—Ä–æ—à–ª–æ–π —Å–¥–µ–ª–∫–∏: "
                                        f"{pribil - 0.3}%\n"
                                        f"–í —Ä—É–±–ª—è—Ö: {cena_pokupki - float(f'{int(data.candle.close.units)}.{int(data.candle.close.nano)}')}\n"
                                        f"\n"
                                    ))
                            except Exception as file_err:
                                print(f"–û—à–∏–±–∫–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤: {file_err}")

                except Exception as stream_error:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å—Ç—Ä–∏–º—É: {stream_error}")
                    session_marina.method('messages.send', {
                        'random_id': random.randint(-2147483648, 2147483647),
                        'peer_id': '2000000209',
                        'chat_id': '209',
                        'message': str(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å—Ç—Ä–∏–º—É: {stream_error}')
                    })
                    break

    except Exception as error:
        print('–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: ', error)
        session_marina.method('messages.send', {
            'random_id': random.randint(-2147483648, 2147483647),
            'peer_id': '2000000209',
            'chat_id': '209',
            'message': str(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main(): {error}')
        })


if __name__ == '__main__':
    while True:
        try:
            main()
        except Exception as errr:
            print(f"–í –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ—à–∏–±–∫–∞: {errr}")
            session_marina.method('messages.send', {
                'random_id': random.randint(-2147483648, 2147483647),
                'peer_id': '2000000209',
                'chat_id': '209',
                'message': str(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if __name__ == '__main__': {errr}")
            })
